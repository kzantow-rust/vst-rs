(function() {var implementors = {};
implementors["vst"] = [{"text":"impl RefUnwindSafe for AEffect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChannelProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpeakerArrangementType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Supported","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProcessLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HostLanguage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileSelectCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileSelectType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileSelect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Events","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MidiEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SysExEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SmpteFrameRate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChannelFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PluginFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifierKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MidiEventFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeInfoFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for AudioBuffer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T&gt; RefUnwindSafe for AudioBufferIterator&lt;'a, 'b, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Inputs&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for InputIterator&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Outputs&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T&gt; RefUnwindSafe for OutputIterator&lt;'a, 'b, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendEventBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChannelInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArrangementTarget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StereoChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StereoConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurroundConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpeakerArrangementType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KnobMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MidiEvent","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SysExEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PluginLoadError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for PluginLoader&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PluginInstance","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for HostBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Category","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Info","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CanDo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HostCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtomicFloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParameterTransfer","synthetic":true,"types":[]},{"text":"impl&lt;'pt&gt; RefUnwindSafe for ParameterTransferIterator&lt;'pt&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()