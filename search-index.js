var searchIndex = JSON.parse('{\
"vst":{"doc":"A rust implementation of the VST2.4 API.","i":[[0,"api","vst","Structures and types for interfacing with the VST 2.4 API.",null,null],[3,"AEffect","vst::api","Used with the VST API to pass around plugin information.",null,null],[12,"magic","","Magic number. Must be `[\'V\', \'S\', \'T\', \'P\']`.",0,null],[12,"dispatcher","","Host to plug-in dispatcher.",0,null],[12,"_process","","Accumulating process mode is deprecated in VST 2.4! Use…",0,null],[12,"setParameter","","Set value of automatable parameter.",0,null],[12,"getParameter","","Get value of automatable parameter.",0,null],[12,"numPrograms","","Number of programs (Presets).",0,null],[12,"numParams","","Number of parameters. All programs are assumed to have…",0,null],[12,"numInputs","","Number of audio inputs.",0,null],[12,"numOutputs","","Number of audio outputs.",0,null],[12,"flags","","Bitmask made of values from `api::PluginFlags`.",0,null],[12,"reserved1","","Reserved for host, must be 0.",0,null],[12,"reserved2","","Reserved for host, must be 0.",0,null],[12,"initialDelay","","For algorithms which need input in the first place (Group…",0,null],[12,"_realQualities","","Deprecated unused member.",0,null],[12,"_offQualities","","Deprecated unused member.",0,null],[12,"_ioRatio","","Deprecated unused member.",0,null],[12,"object","","Void pointer usable by api to store object data.",0,null],[12,"user","","User defined pointer.",0,null],[12,"uniqueId","","Registered unique identifier (register it at Steinberg 3rd…",0,null],[12,"version","","Plug-in version (e.g. 1100 for v1.1.0.0).",0,null],[12,"processReplacing","","Process audio samples in replacing mode.",0,null],[12,"processReplacingF64","","Process double-precision audio samples in replacing mode.",0,null],[12,"future","","Reserved for future use (please zero).",0,null],[3,"ChannelProperties","","Information about a channel. Only some hosts use this…",null,null],[12,"name","","Channel name.",1,null],[12,"flags","","Flags found in `ChannelFlags`.",1,null],[12,"arrangement_type","","Type of speaker arrangement this channel is a part of.",1,null],[12,"short_name","","Name of channel (recommended: 6 characters + delimiter).",1,null],[12,"future","","Reserved for future use.",1,null],[3,"FileType","","File type descriptor.",null,null],[12,"name","","Display name of file type.",2,null],[12,"osx_type","","OS X file type.",2,null],[12,"win_type","","Windows file type.",2,null],[12,"nix_type","","Unix file type.",2,null],[12,"mime_type_1","","MIME type.",2,null],[12,"mime_type_2","","Additional MIME type.",2,null],[3,"FileSelect","","File selector descriptor used in…",null,null],[12,"command","","The type of file selection to perform.",3,null],[12,"select_type","","The file selector to open.",3,null],[12,"mac_creator","","Unknown. 0 = no creator.",3,null],[12,"num_types","","Number of file types.",3,null],[12,"file_types","","List of file types to show.",3,null],[12,"title","","File selector\'s title.",3,null],[12,"initial_path","","Initial path.",3,null],[12,"return_path","","Used when operation returns a single path.",3,null],[12,"size_return_path","","Size of the path buffer in bytes.",3,null],[12,"return_multiple_paths","","Used when operation returns multiple paths.",3,null],[12,"num_paths","","Number of paths returned.",3,null],[12,"reserved","","Reserved by host.",3,null],[12,"future","","Reserved for future use.",3,null],[3,"Events","","A struct which contains events.",null,null],[12,"num_events","","Number of events.",4,null],[12,"_reserved","","Reserved for future use. Should be 0.",4,null],[12,"events","","Variable-length array of pointers to `api::Event` objects.",4,null],[3,"Event","","A VST event intended to be casted to a corresponding type.",null,null],[12,"event_type","","The type of event. This lets you know which event this…",5,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<Event>()`.",5,null],[12,"delta_frames","","Number of samples into the current processing block that…",5,null],[12,"_flags","","Generic flags, none defined in VST api yet.",5,null],[12,"_reserved","","The `Event` type is cast appropriately, so this acts as…",5,null],[3,"MidiEvent","","A midi event.",null,null],[12,"event_type","","Should be `EventType::Midi`.",6,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<MidiEvent>()`.",6,null],[12,"delta_frames","","Number of samples into the current processing block that…",6,null],[12,"flags","","See `MidiEventFlags`.",6,null],[12,"note_length","","Length in sample frames of entire note if available,…",6,null],[12,"note_offset","","Offset in samples into note from start if available,…",6,null],[12,"midi_data","","1 to 3 midi bytes. TODO: Doc",6,null],[12,"_midi_reserved","","Reserved midi byte (0).",6,null],[12,"detune","","Detuning between -63 and +64 cents, for scales other than…",6,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",6,null],[12,"_reserved1","","Reserved for future use. Should be 0.",6,null],[12,"_reserved2","","Reserved for future use. Should be 0.",6,null],[3,"SysExEvent","","A midi system exclusive event.",null,null],[12,"event_type","","Should be `EventType::SysEx`.",7,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<SysExEvent>()`.",7,null],[12,"delta_frames","","Number of samples into the current processing block that…",7,null],[12,"_flags","","Generic flags, none defined in VST api yet.",7,null],[12,"data_size","","Size of payload in bytes.",7,null],[12,"_reserved1","","Reserved for future use. Should be 0.",7,null],[12,"system_data","","Pointer to payload.",7,null],[12,"_reserved2","","Reserved for future use. Should be 0.",7,null],[3,"TimeInfo","","Describes the time at the start of the block currently…",null,null],[12,"sample_pos","","current Position in audio samples (always valid)",8,null],[12,"sample_rate","","current Sample Rate in Hertz (always valid)",8,null],[12,"nanoseconds","","System Time in nanoseconds (10^-9 second)",8,null],[12,"ppq_pos","","Musical Position, in Quarter Note (1.0 equals 1 Quarter…",8,null],[12,"tempo","","current Tempo in BPM (Beats Per Minute)",8,null],[12,"bar_start_pos","","last Bar Start Position, in Quarter Note",8,null],[12,"cycle_start_pos","","Cycle Start (left locator), in Quarter Note",8,null],[12,"cycle_end_pos","","Cycle End (right locator), in Quarter Note",8,null],[12,"time_sig_numerator","","Time Signature Numerator (e.g. 3 for 3/4)",8,null],[12,"time_sig_denominator","","Time Signature Denominator (e.g. 4 for 3/4)",8,null],[12,"smpte_offset","","SMPTE offset in SMPTE subframes (bits; 1/80 of a frame).…",8,null],[12,"smpte_frame_rate","","See `SmpteFrameRate`",8,null],[12,"samples_to_next_clock","","MIDI Clock Resolution (24 Per Quarter Note), can be…",8,null],[12,"flags","","See `TimeInfoFlags`",8,null],[3,"ChannelFlags","","Flags for VST channels.",null,null],[3,"PluginFlags","","Flags for VST plugins.",null,null],[3,"ModifierKey","","Cross platform modifier key flags.",null,null],[3,"MidiEventFlags","","MIDI event flags.",null,null],[3,"TimeInfoFlags","","Used in the `flags` field of `TimeInfo`, and for querying…",null,null],[4,"SpeakerArrangementType","","Tells the host how the channels are intended to be used in…",null,null],[13,"Custom","","User defined arrangement.",9,null],[13,"Empty","","Empty arrangement.",9,null],[13,"Mono","","Mono.",9,null],[13,"Stereo","","L R",9,null],[13,"StereoSurround","","Ls Rs",9,null],[13,"StereoCenter","","Lc Rc",9,null],[13,"StereoSide","","Sl Sr",9,null],[13,"StereoCLfe","","C Lfe",9,null],[13,"Cinema30","","L R C",9,null],[13,"Music30","","L R S",9,null],[13,"Cinema31","","L R C Lfe",9,null],[13,"Music31","","L R Lfe S",9,null],[13,"Cinema40","","L R C S (LCRS)",9,null],[13,"Music40","","L R Ls Rs (Quadro)",9,null],[13,"Cinema41","","L R C Lfe S (LCRS + Lfe)",9,null],[13,"Music41","","L R Lfe Ls Rs (Quadro + Lfe)",9,null],[13,"Surround50","","L R C Ls Rs",9,null],[13,"Surround51","","L R C Lfe Ls Rs",9,null],[13,"Cinema60","","L R C Ls  Rs Cs",9,null],[13,"Music60","","L R Ls Rs  Sl Sr",9,null],[13,"Cinema61","","L R C Lfe Ls Rs Cs",9,null],[13,"Music61","","L R Lfe Ls Rs Sl Sr",9,null],[13,"Cinema70","","L R C Ls Rs Lc Rc",9,null],[13,"Music70","","L R C Ls Rs Sl Sr",9,null],[13,"Cinema71","","L R C Lfe Ls Rs Lc Rc",9,null],[13,"Music71","","L R C Lfe Ls Rs Sl Sr",9,null],[13,"Cinema80","","L R C Ls Rs Lc Rc Cs",9,null],[13,"Music80","","L R C Ls Rs Cs Sl Sr",9,null],[13,"Cinema81","","L R C Lfe Ls Rs Lc Rc Cs",9,null],[13,"Music81","","L R C Lfe Ls Rs Cs Sl Sr",9,null],[13,"Surround102","","L R C Lfe Ls Rs Tfl Tfc Tfr Trl Trr Lfe2",9,null],[4,"Supported","","Used to specify whether functionality is supported.",null,null],[13,"Yes","","",10,null],[13,"Maybe","","",10,null],[13,"No","","",10,null],[13,"Custom","","",10,null],[4,"ProcessLevel","","Denotes in which thread the host is in.",null,null],[13,"Unknown","","Unsupported by host.",11,null],[13,"User","","GUI thread.",11,null],[13,"Realtime","","Audio process thread.",11,null],[13,"Prefetch","","Sequence thread (MIDI, etc).",11,null],[13,"Offline","","Offline processing thread (therefore GUI/user thread).",11,null],[4,"HostLanguage","","Language that the host is using.",null,null],[13,"English","","",12,null],[13,"German","","",12,null],[13,"French","","",12,null],[13,"Italian","","",12,null],[13,"Spanish","","",12,null],[13,"Japanese","","",12,null],[4,"FileSelectCommand","","The file operation to perform.",null,null],[13,"Load","","Load a file.",13,null],[13,"Save","","Save a file.",13,null],[13,"LoadMultipleFiles","","Load multiple files simultaneously.",13,null],[13,"SelectDirectory","","Choose a directory.",13,null],[4,"FileSelectType","","Format to select files.",null,null],[13,"Regular","","Regular file selector.",14,null],[4,"EventType","","The type of event that has occured. See…",null,null],[13,"_Placeholder","","Value used for uninitialized placeholder events.",15,null],[13,"Midi","","Midi event. See `api::MidiEvent`.",15,null],[13,"_Audio","","Deprecated.",15,null],[13,"_Video","","Deprecated.",15,null],[13,"_Parameter","","Deprecated.",15,null],[13,"_Trigger","","Deprecated.",15,null],[13,"SysEx","","System exclusive event. See `api::SysExEvent`.",15,null],[4,"SmpteFrameRate","","SMPTE Frame Rates.",null,null],[13,"Smpte24fps","","24 fps",16,null],[13,"Smpte25fps","","25 fps",16,null],[13,"Smpte2997fps","","29.97 fps",16,null],[13,"Smpte30fps","","30 fps",16,null],[13,"Smpte2997dfps","","29.97 drop",16,null],[13,"Smpte30dfps","","30 drop",16,null],[13,"SmpteFilm16mm","","Film 16mm",16,null],[13,"SmpteFilm35mm","","Film 35mm",16,null],[13,"Smpte239fps","","HDTV: 23.976 fps",16,null],[13,"Smpte249fps","","HDTV: 24.976 fps",16,null],[13,"Smpte599fps","","HDTV: 59.94 fps",16,null],[13,"Smpte60fps","","HDTV: 60 fps",16,null],[0,"consts","","Constant values",null,null],[17,"MAX_PRESET_NAME_LEN","vst::api::consts","",null,null],[17,"MAX_PARAM_STR_LEN","","",null,null],[17,"MAX_LABEL","","",null,null],[17,"MAX_SHORT_LABEL","","",null,null],[17,"MAX_PRODUCT_STR_LEN","","",null,null],[17,"MAX_VENDOR_STR_LEN","","",null,null],[17,"VST_MAGIC","","VST plugins are identified by a magic number. This…",null,null],[6,"PluginMain","vst::api","`VSTPluginMain` function signature.",null,null],[6,"HostCallbackProc","","Host callback function passed to plugin. Can be used to…",null,null],[6,"DispatcherProc","","Dispatcher function used to process opcodes. Called by host.",null,null],[6,"ProcessProc","","Process function used to process 32 bit floating point…",null,null],[6,"ProcessProcF64","","Process function used to process 64 bit floating point…",null,null],[6,"SetParameterProc","","Callback function used to set parameter values. Called by…",null,null],[6,"GetParameterProc","","Callback function used to get parameter values. Called by…",null,null],[11,"get_plugin","","Return handle to Plugin object. Only works for plugins…",0,[[],["box",3]]],[11,"drop_plugin","","Drop the Plugin object. Only works for plugins created…",0,[[]]],[11,"from","","Create a `Supported` value from an integer if possible.",10,[[],[["supported",4],["option",4]]]],[11,"events","","Use this in your impl of process_events() to process the…",4,[[]]],[18,"ACTIVE","","Indicates channel is active. Ignored by host.",17,null],[18,"STEREO","","Indicates channel is first of stereo pair.",17,null],[18,"SPEAKER","","Use channel\'s specified speaker_arrangement instead of…",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["channelflags",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["channelflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",17,[[],[["channelflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",17,[[],["channelflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[],["channelflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",17,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",17,[[["channelflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",17,[[["channelflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["channelflags",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["channelflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["channelflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",17,[[["channelflags",3]]]],[18,"HAS_EDITOR","","Plugin has an editor.",18,null],[18,"CAN_REPLACING","","Plugin can process 32 bit audio. (Mandatory in VST 2.4).",18,null],[18,"PROGRAM_CHUNKS","","Plugin preset data is handled in formatless chunks.",18,null],[18,"IS_SYNTH","","Plugin is a synth.",18,null],[18,"NO_SOUND_IN_STOP","","Plugin does not produce sound when all input is silence.",18,null],[18,"CAN_DOUBLE_REPLACING","","Supports 64 bit audio processing.",18,null],[11,"empty","","Returns an empty set of flags",18,[[],["pluginflags",3]]],[11,"all","","Returns the set containing all flags.",18,[[],["pluginflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",18,[[],[["pluginflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",18,[[],["pluginflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",18,[[],["pluginflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",18,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",18,[[["pluginflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",18,[[["pluginflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["pluginflags",3]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["pluginflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["pluginflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",18,[[["pluginflags",3]]]],[18,"SHIFT","","Shift key.",19,null],[18,"ALT","","Alt key.",19,null],[18,"COMMAND","","Control on mac.",19,null],[18,"CONTROL","","Command on mac, ctrl on other.",19,null],[11,"empty","","Returns an empty set of flags",19,[[],["modifierkey",3]]],[11,"all","","Returns the set containing all flags.",19,[[],["modifierkey",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",19,[[],[["option",4],["modifierkey",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",19,[[],["modifierkey",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",19,[[],["modifierkey",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",19,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",19,[[["modifierkey",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",19,[[["modifierkey",3]]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["modifierkey",3]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["modifierkey",3]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["modifierkey",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",19,[[["modifierkey",3]]]],[18,"REALTIME_EVENT","","This event is played live (not in playback from a…",20,null],[11,"empty","","Returns an empty set of flags",20,[[],["midieventflags",3]]],[11,"all","","Returns the set containing all flags.",20,[[],["midieventflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",20,[[],[["midieventflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",20,[[],["midieventflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",20,[[],["midieventflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",20,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",20,[[["midieventflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",20,[[["midieventflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["midieventflags",3]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["midieventflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["midieventflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",20,[[["midieventflags",3]]]],[18,"TRANSPORT_CHANGED","","Indicates that play, cycle or record state has changed.",21,null],[18,"TRANSPORT_PLAYING","","Set if Host sequencer is currently playing.",21,null],[18,"TRANSPORT_CYCLE_ACTIVE","","Set if Host sequencer is in cycle mode.",21,null],[18,"TRANSPORT_RECORDING","","Set if Host sequencer is in record mode.",21,null],[18,"AUTOMATION_WRITING","","Set if automation write mode active (record parameter…",21,null],[18,"AUTOMATION_READING","","Set if automation read mode active (play parameter changes).",21,null],[18,"NANOSECONDS_VALID","","Set if TimeInfo::nanoseconds is valid.",21,null],[18,"PPQ_POS_VALID","","Set if TimeInfo::ppq_pos is valid.",21,null],[18,"TEMPO_VALID","","Set if TimeInfo::tempo is valid.",21,null],[18,"BARS_VALID","","Set if TimeInfo::bar_start_pos is valid.",21,null],[18,"CYCLE_POS_VALID","","Set if both TimeInfo::cycle_start_pos and…",21,null],[18,"TIME_SIG_VALID","","Set if both TimeInfo::time_sig_numerator and…",21,null],[18,"SMPTE_VALID","","Set if both TimeInfo::smpte_offset and…",21,null],[18,"VST_CLOCK_VALID","","Set if TimeInfo::samples_to_next_clock is valid.",21,null],[11,"empty","","Returns an empty set of flags",21,[[],["timeinfoflags",3]]],[11,"all","","Returns the set containing all flags.",21,[[],["timeinfoflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",21,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",21,[[],[["option",4],["timeinfoflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",21,[[],["timeinfoflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",21,[[],["timeinfoflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",21,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",21,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",21,[[["timeinfoflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",21,[[["timeinfoflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",21,[[["timeinfoflags",3]]]],[11,"remove","","Removes the specified flags in-place.",21,[[["timeinfoflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",21,[[["timeinfoflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",21,[[["timeinfoflags",3]]]],[0,"buffer","vst","Buffers to safely work with audio samples.",null,null],[3,"AudioBuffer","vst::buffer","`AudioBuffer` contains references to the audio buffers for…",null,null],[3,"AudioBufferIterator","","Iterator over pairs of buffers of input channels and…",null,null],[3,"Inputs","","Wrapper type to access the buffers for the input channels…",null,null],[3,"InputIterator","","Iterator over buffers for input channels of an…",null,null],[3,"Outputs","","Wrapper type to access the buffers for the output channels…",null,null],[3,"OutputIterator","","Iterator over buffers for output channels of an…",null,null],[3,"SendEventBuffer","","This buffer is used for sending midi events through the…",null,null],[6,"PlaceholderEvent","","This is used as a placeholder to pre-allocate space for a…",null,null],[8,"WriteIntoPlaceholder","","This trait is used by `SendEventBuffer::send_events` to…",null,null],[10,"write_into","","writes an event into the given placeholder memory location",22,[[["placeholderevent",6]]]],[11,"from_raw","","Create an `AudioBuffer` from raw pointers. Only really…",23,[[]]],[11,"input_count","","The number of input channels that this buffer was created…",23,[[]]],[11,"output_count","","The number of output channels that this buffer was created…",23,[[]]],[11,"samples","","The number of samples in this buffer (same for all channels)",23,[[]]],[11,"split","","Split this buffer into separate inputs and outputs.",23,[[]]],[11,"zip","","Create an iterator over pairs of input buffers and output…",23,[[],["audiobufferiterator",3]]],[11,"len","","Number of channels",24,[[]]],[11,"is_empty","","Returns true if the buffer is empty",24,[[]]],[11,"get","","Access channel at the given index",24,[[]]],[11,"split_at","","Split borrowing at the given index, like for slices",24,[[]]],[11,"len","","Number of channels",25,[[]]],[11,"is_empty","","Returns true if the buffer is empty",25,[[]]],[11,"get","","Access channel at the given index",25,[[]]],[11,"get_mut","","Mutably access channel at the given index",25,[[]]],[11,"split_at_mut","","Split borrowing at the given index, like for slices",25,[[]]],[11,"new","","Creates a buffer for sending up to the given number of…",26,[[]]],[11,"send_events","","Sends events to the host. See the `fwd_midi` example.",26,[[["intoiterator",8],["host",8]]]],[11,"send_events_to_plugin","","Sends events from the host to a plugin.",26,[[["plugin",8],["intoiterator",8]]]],[0,"channels","vst","Meta data for dealing with input / output channels. Not…",null,null],[3,"ChannelInfo","vst::channels","Information about an input / output channel. This isn\'t…",null,null],[4,"ArrangementTarget","","Target for Speaker arrangement type. Can be a cinema…",null,null],[13,"Music","","Music arrangement. Technically identical to Cinema.",27,null],[13,"Cinema","","Cinematic arrangement. Technically identical to Music.",27,null],[4,"StereoChannel","","An enum for all channels in a stereo configuration.",null,null],[13,"Left","","Left channel.",28,null],[13,"Right","","Right channel.",28,null],[4,"StereoConfig","","Possible stereo speaker configurations.",null,null],[13,"L_R","","Regular.",29,null],[13,"Ls_Rs","","Left surround, right surround.",29,null],[13,"Lc_Rc","","Left center, right center.",29,null],[13,"Sl_Sr","","Side left, side right.",29,null],[13,"C_Lfe","","Center, low frequency effects.",29,null],[4,"SurroundConfig","","Possible surround speaker configurations.",null,null],[13,"S3_0","","3.0 surround sound. Cinema: L R C Music: L R S",30,null],[13,"S3_1","","3.1 surround sound. Cinema: L R C Lfe Music: L R Lfe S",30,null],[13,"S4_0","","4.0 surround sound. Cinema: L R C S (LCRS) Music: L R Ls…",30,null],[13,"S4_1","","4.1 surround sound. Cinema: L R C Lfe S (LCRS + Lfe)…",30,null],[13,"S5_0","","5.0 surround sound. Cinema and music: L R C Ls Rs",30,null],[13,"S5_1","","5.1 surround sound. Cinema and music: L R C Lfe Ls Rs",30,null],[13,"S6_0","","6.0 surround sound. Cinema: L R C Ls Rs Cs Music: L R Ls…",30,null],[13,"S6_1","","6.1 surround sound. Cinema: L R C Lfe Ls Rs Cs Music: L R…",30,null],[13,"S7_0","","7.0 surround sound. Cinema: L R C Ls Rs Lc Rc Music: L R C…",30,null],[13,"S7_1","","7.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Music: L…",30,null],[13,"S8_0","","8.0 surround sound. Cinema: L R C Ls Rs Lc Rc Cs Music: L…",30,null],[13,"S8_1","","8.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Cs…",30,null],[13,"S10_2","","10.2 surround sound. Cinema + Music: L R C Lfe Ls Rs Tfl…",30,null],[4,"SpeakerArrangementType","","Type representing how a channel is used. Only useful for…",null,null],[13,"Custom","","Custom arrangement not specified to host.",31,null],[13,"Empty","","Empty arrangement.",31,null],[13,"Mono","","Mono channel.",31,null],[13,"Stereo","","Stereo channel. Contains type of stereo arrangement and…",31,null],[13,"Surround","","Surround channel. Contains surround arrangement and target…",31,null],[11,"new","","Construct a new `ChannelInfo` object.",32,[[["speakerarrangementtype",4],["option",4],["string",3],["option",4]],["channelinfo",3]]],[11,"is_speaker_type","","Determine whether this channel is part of a surround…",31,[[]]],[11,"is_left_stereo","","Determine whether this channel is the left speaker in a…",31,[[]]],[0,"editor","vst","All VST plugin editor related functionality.",null,null],[3,"KeyCode","vst::editor","A platform independent key code. Includes modifier keys.",null,null],[12,"character","","ASCII character for key pressed (if applicable).",33,null],[12,"key","","Key pressed. See `enums::Key`.",33,null],[12,"modifier","","Modifier key bitflags. See `enums::flags::modifier_key`.",33,null],[4,"KnobMode","","Allows host to set how a parameter knob works.",null,null],[13,"Circular","","",34,null],[13,"CircularRelative","","",34,null],[13,"Linear","","",34,null],[4,"Key","","Platform independent key codes.",null,null],[13,"None","","",35,null],[13,"Back","","",35,null],[13,"Tab","","",35,null],[13,"Clear","","",35,null],[13,"Return","","",35,null],[13,"Pause","","",35,null],[13,"Escape","","",35,null],[13,"Space","","",35,null],[13,"Next","","",35,null],[13,"End","","",35,null],[13,"Home","","",35,null],[13,"Left","","",35,null],[13,"Up","","",35,null],[13,"Right","","",35,null],[13,"Down","","",35,null],[13,"PageUp","","",35,null],[13,"PageDown","","",35,null],[13,"Select","","",35,null],[13,"Print","","",35,null],[13,"Enter","","",35,null],[13,"Snapshot","","",35,null],[13,"Insert","","",35,null],[13,"Delete","","",35,null],[13,"Help","","",35,null],[13,"Numpad0","","",35,null],[13,"Numpad1","","",35,null],[13,"Numpad2","","",35,null],[13,"Numpad3","","",35,null],[13,"Numpad4","","",35,null],[13,"Numpad5","","",35,null],[13,"Numpad6","","",35,null],[13,"Numpad7","","",35,null],[13,"Numpad8","","",35,null],[13,"Numpad9","","",35,null],[13,"Multiply","","",35,null],[13,"Add","","",35,null],[13,"Separator","","",35,null],[13,"Subtract","","",35,null],[13,"Decimal","","",35,null],[13,"Divide","","",35,null],[13,"F1","","",35,null],[13,"F2","","",35,null],[13,"F3","","",35,null],[13,"F4","","",35,null],[13,"F5","","",35,null],[13,"F6","","",35,null],[13,"F7","","",35,null],[13,"F8","","",35,null],[13,"F9","","",35,null],[13,"F10","","",35,null],[13,"F11","","",35,null],[13,"F12","","",35,null],[13,"Numlock","","",35,null],[13,"Scroll","","",35,null],[13,"Shift","","",35,null],[13,"Control","","",35,null],[13,"Alt","","",35,null],[13,"Equals","","",35,null],[8,"Editor","","Implemented by plugin editors.",null,null],[10,"size","","Get the size of the editor window.",36,[[]]],[10,"position","","Get the coordinates of the editor window.",36,[[]]],[11,"idle","","Editor idle call. Called by host.",36,[[]]],[11,"close","","Called when the editor window is closed.",36,[[]]],[10,"open","","Called when the editor window is opened.",36,[[]]],[10,"is_open","","Return whether the window is currently open.",36,[[]]],[11,"set_knob_mode","","Set the knob mode for this editor (if supported by host).",36,[[["knobmode",4]]]],[11,"key_up","","Receive key up event. Return `true` if the key was used.",36,[[["keycode",3]]]],[11,"key_down","","Receive key down event. Return `true` if the key was used.",36,[[["keycode",3]]]],[0,"event","vst","Interfaces to VST events.",null,null],[3,"MidiEvent","vst::event","A midi event.",null,null],[12,"data","","The raw midi data associated with this event.",37,null],[12,"delta_frames","","Number of samples into the current processing block that…",37,null],[12,"live","","This midi event was created live as opposed to being…",37,null],[12,"note_length","","The length of the midi note associated with this event, if…",37,null],[12,"note_offset","","Offset in samples into note from note start, if available.",37,null],[12,"detune","","Detuning between -63 and +64 cents.",37,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",37,null],[3,"SysExEvent","","A system exclusive event.",null,null],[12,"payload","","The SysEx payload.",38,null],[12,"delta_frames","","Number of samples into the current processing block that…",38,null],[4,"Event","","A VST event.",null,null],[13,"Midi","","A midi event.",39,null],[13,"SysEx","","A system exclusive event.",39,null],[13,"Deprecated","","A deprecated event.",39,null],[0,"host","vst","Host specific structures.",null,null],[3,"PluginLoader","vst::host","Wrapper for an externally loaded VST plugin.",null,null],[3,"PluginInstance","","An instance of an externally loaded VST plugin.",null,null],[3,"HostBuffer","","Used for constructing `AudioBuffer` instances on the host.",null,null],[4,"PluginLoadError","","All possible errors that can occur when loading a VST…",null,null],[13,"InvalidPath","","Could not load given path.",40,null],[13,"NotAPlugin","","Given path is not a VST plugin.",40,null],[13,"InstanceFailed","","Failed to create an instance of this plugin.",40,null],[13,"InvalidApiVersion","","The API version which the plugin used is not supported by…",40,null],[8,"Host","","Implemented by all VST hosts.",null,null],[11,"automate","","Automate a parameter; the value has been changed.",41,[[]]],[11,"begin_edit","","Signal that automation of a parameter started (the knob…",41,[[]]],[11,"end_edit","","Signal that automation of a parameter ended (the knob is…",41,[[]]],[11,"get_plugin_id","","Get the plugin ID of the currently loading plugin.",41,[[]]],[11,"idle","","An idle call.",41,[[]]],[11,"get_info","","Get vendor and product information.",41,[[]]],[11,"process_events","","Handle incoming events from the plugin.",41,[[["events",3]]]],[11,"get_time_info","","Get time information.",41,[[],[["option",4],["timeinfo",3]]]],[11,"get_block_size","","Get block size.",41,[[]]],[11,"update_display","","Refresh UI after the plugin\'s parameters changed.",41,[[]]],[11,"load","","Load a plugin at the given path with the given host.",42,[[["mutex",3],["path",3],["arc",3]],[["pluginloaderror",4],["result",4],["pluginloader",3]]]],[11,"instance","","Try to create an instance of this VST plugin.",42,[[],[["pluginloaderror",4],["plugininstance",3],["result",4]]]],[11,"new","","Create a `HostBuffer` for a given number of input and…",43,[[],["hostbuffer",3]]],[11,"from_info","","Create a `HostBuffer` for the number of input and output…",43,[[["info",3]],["hostbuffer",3]]],[11,"bind","","Bind sample arrays to the `HostBuffer` to create an…",43,[[],["audiobuffer",3]]],[11,"input_count","","Number of input channels supported by this `HostBuffer`.",43,[[]]],[11,"output_count","","Number of output channels supported by this `HostBuffer`.",43,[[]]],[0,"plugin","vst","Plugin specific structures.",null,null],[3,"Info","vst::plugin","A structure representing static plugin information.",null,null],[12,"name","","Plugin Name.",44,null],[12,"vendor","","Plugin Vendor.",44,null],[12,"presets","","Number of different presets.",44,null],[12,"parameters","","Number of parameters.",44,null],[12,"inputs","","Number of inputs.",44,null],[12,"outputs","","Number of outputs.",44,null],[12,"midi_inputs","","Number of MIDI input channels (1-16), or 0 for the default…",44,null],[12,"midi_outputs","","Number of MIDI output channels (1-16), or 0 for the…",44,null],[12,"unique_id","","Unique plugin ID. Can be registered with Steinberg to…",44,null],[12,"version","","Plugin version (e.g. 0001 = `v0.0.0.1`, 1283 = `v1.2.8.3`).",44,null],[12,"category","","Plugin category. Possible values are found in…",44,null],[12,"initial_delay","","Latency of the plugin in samples.",44,null],[12,"preset_chunks","","Indicates that preset data is handled in formatless chunks.",44,null],[12,"f64_precision","","Indicates whether this plugin can process f64 based…",44,null],[12,"silent_when_stopped","","If this is true, the plugin will not produce sound when…",44,null],[3,"HostCallback","","A reference to the host which allows the plugin to call…",null,null],[4,"Category","","Plugin type. Generally either Effect or Synth.",null,null],[13,"Unknown","","Unknown / not implemented",45,null],[13,"Effect","","Any effect",45,null],[13,"Synth","","VST instrument",45,null],[13,"Analysis","","Scope, tuner, spectrum analyser, etc.",45,null],[13,"Mastering","","Dynamics, etc.",45,null],[13,"Spacializer","","Panners, etc.",45,null],[13,"RoomFx","","Delays and Reverbs",45,null],[13,"SurroundFx","","Dedicated surround processor.",45,null],[13,"Restoration","","Denoiser, etc.",45,null],[13,"OfflineProcess","","Offline processing.",45,null],[13,"Shell","","Contains other plugins.",45,null],[13,"Generator","","Tone generator, etc.",45,null],[4,"CanDo","","Features which are optionally supported by a plugin. These…",null,null],[13,"SendEvents","","",46,null],[13,"SendMidiEvent","","",46,null],[13,"ReceiveEvents","","",46,null],[13,"ReceiveMidiEvent","","",46,null],[13,"ReceiveTimeInfo","","",46,null],[13,"Offline","","",46,null],[13,"MidiProgramNames","","",46,null],[13,"Bypass","","",46,null],[13,"ReceiveSysExEvent","","",46,null],[13,"MidiSingleNoteTuningChange","","",46,null],[13,"MidiKeyBasedInstrumentControl","","",46,null],[13,"Other","","",46,null],[8,"Plugin","","Must be implemented by all VST plugins.",null,null],[10,"get_info","","This method must return an `Info` struct.",47,[[],["info",3]]],[11,"new","","Called during initialization to pass a `HostCallback` to…",47,[[["hostcallback",3]]]],[11,"init","","Called when plugin is fully initialized.",47,[[]]],[11,"set_sample_rate","","Called when sample rate is changed by host.",47,[[]]],[11,"set_block_size","","Called when block size is changed by host.",47,[[]]],[11,"resume","","Called to transition the plugin into the resumed state.",47,[[]]],[11,"suspend","","Called to transition the plugin into the suspended state.",47,[[]]],[11,"vendor_specific","","Vendor specific handling.",47,[[]]],[11,"can_do","","Return whether plugin supports specified action.",47,[[["cando",4]],["supported",4]]],[11,"get_tail_size","","Get the tail size of plugin when it is stopped. Used in…",47,[[]]],[11,"process","","Process an audio buffer containing `f32` values.",47,[[["audiobuffer",3]]]],[11,"process_f64","","Process an audio buffer containing `f64` values.",47,[[["audiobuffer",3]]]],[11,"process_events","","Handle incoming events sent from the host.",47,[[["events",3]]]],[11,"get_parameter_object","","Get a reference to the shared parameter object.",47,[[],[["pluginparameters",8],["arc",3]]]],[11,"get_input_info","","Get information about an input channel. Only used by some…",47,[[],["channelinfo",3]]],[11,"get_output_info","","Get information about an output channel. Only used by some…",47,[[],["channelinfo",3]]],[11,"start_process","","Called one time before the start of process call.",47,[[]]],[11,"stop_process","","Called after the stop of process call.",47,[[]]],[11,"get_editor","","Return handle to plugin editor if supported. The method…",47,[[],[["option",4],["box",3]]]],[8,"PluginParameters","","Parameter object shared between the UI and processing…",null,null],[11,"change_preset","","Set the current preset to the index specified by `preset`.",48,[[]]],[11,"get_preset_num","","Get the current preset index.",48,[[]]],[11,"set_preset_name","","Set the current preset name.",48,[[["string",3]]]],[11,"get_preset_name","","Get the name of the preset at the index specified by…",48,[[],["string",3]]],[11,"get_parameter_label","","Get parameter label for parameter at `index` (e.g. \\\"db\\\",…",48,[[],["string",3]]],[11,"get_parameter_text","","Get the parameter value for parameter at `index` (e.g.…",48,[[],["string",3]]],[11,"get_parameter_name","","Get the name of parameter at `index`.",48,[[],["string",3]]],[11,"get_parameter","","Get the value of paramater at `index`. Should be value…",48,[[]]],[11,"set_parameter","","Set the value of parameter at `index`. `value` is between…",48,[[]]],[11,"can_be_automated","","Return whether parameter at `index` can be automated.",48,[[]]],[11,"string_to_parameter","","Use String as input for parameter value. Used by host to…",48,[[["string",3]]]],[11,"get_preset_data","","If `preset_chunks` is set to true in plugin info, this…",48,[[],["vec",3]]],[11,"get_bank_data","","If `preset_chunks` is set to true in plugin info, this…",48,[[],["vec",3]]],[11,"load_preset_data","","If `preset_chunks` is set to true in plugin info, this…",48,[[]]],[11,"load_bank_data","","If `preset_chunks` is set to true in plugin info, this…",48,[[]]],[11,"from_str","","Converts a string to a `CanDo` instance. Any given string…",46,[[],["cando",4]]],[11,"vst_version","","Get the VST API version supported by the host e.g. `2400 =…",49,[[]]],[11,"raw_callback","","Get the callback for calling host-specific extensions",49,[[],[["option",4],["hostcallbackproc",6]]]],[11,"raw_effect","","Get the effect pointer for calling host-specific extensions",49,[[]]],[0,"util","vst","Structures for easing the implementation of VST plugins.",null,null],[3,"AtomicFloat","vst::util","Simple atomic floating point variable with relaxed ordering.",null,null],[3,"ParameterTransfer","","A set of parameters that can be shared between threads.",null,null],[3,"ParameterTransferIterator","","An iterator over changed parameters. Returned by `iterate`.",null,null],[11,"new","","New atomic float with initial value `value`.",50,[[],["atomicfloat",3]]],[11,"get","","Get the current value of the atomic float.",50,[[]]],[11,"set","","Set the value of the atomic float to `value`.",50,[[]]],[11,"new","","Create a new parameter set with `parameter_count`…",51,[[]]],[11,"set_parameter","","Set the value of the parameter with index `index` to…",51,[[]]],[11,"get_parameter","","Get the current value of the parameter with index `index`.",51,[[]]],[11,"iterate","","Iterate over all parameters marked as changed. If…",51,[[],["parametertransferiterator",3]]],[14,"plugin_main","vst","Exports the necessary symbols for the plugin to be used by…",null,null],[11,"from","vst::api","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","vst::buffer","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"into_iter","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","vst::channels","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","vst::editor","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","vst::event","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","vst::host","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","vst::plugin","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","vst::util","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"write_into","vst::event","",37,[[["placeholderevent",6]]]],[11,"write_into","","",38,[[["placeholderevent",6]]]],[11,"write_into","","",39,[[["placeholderevent",6]]]],[11,"automate","vst::plugin","Signal the host that the value for the parameter has…",49,[[]]],[11,"begin_edit","","Signal the host the start of a parameter change a gesture…",49,[[]]],[11,"end_edit","","Signal the host the end of a parameter change gesture…",49,[[]]],[11,"get_plugin_id","","",49,[[]]],[11,"idle","","",49,[[]]],[11,"get_info","","",49,[[]]],[11,"process_events","","Send events to the host.",49,[[["events",3]]]],[11,"get_time_info","","Request time information from Host.",49,[[],[["option",4],["timeinfo",3]]]],[11,"get_block_size","","Get block size.",49,[[]]],[11,"update_display","","Refresh UI after the plugin\'s parameters changed.",49,[[]]],[11,"get_info","vst::host","",55,[[],["info",3]]],[11,"init","","",55,[[]]],[11,"set_sample_rate","","",55,[[]]],[11,"set_block_size","","",55,[[]]],[11,"resume","","",55,[[]]],[11,"suspend","","",55,[[]]],[11,"vendor_specific","","",55,[[]]],[11,"can_do","","",55,[[["cando",4]],["supported",4]]],[11,"get_tail_size","","",55,[[]]],[11,"process","","",55,[[["audiobuffer",3]]]],[11,"process_f64","","",55,[[["audiobuffer",3]]]],[11,"process_events","","",55,[[["events",3]]]],[11,"get_input_info","","",55,[[],["channelinfo",3]]],[11,"get_output_info","","",55,[[],["channelinfo",3]]],[11,"get_parameter_object","","",55,[[],[["pluginparameters",8],["arc",3]]]],[11,"get_editor","","",55,[[],[["option",4],["box",3]]]],[11,"drop","","",55,[[]]],[11,"from","vst::channels","",32,[[["channelproperties",3]],["channelinfo",3]]],[11,"from","","",31,[[["channelproperties",3]],["speakerarrangementtype",4]]],[11,"from","vst::editor","",34,[[],["knobmode",4]]],[11,"from","","",34,[[],["knobmode",4]]],[11,"from","","",34,[[],["knobmode",4]]],[11,"from","","",34,[[],["knobmode",4]]],[11,"from","","",34,[[],["knobmode",4]]],[11,"from","","",34,[[],["knobmode",4]]],[11,"from","","",34,[[],["knobmode",4]]],[11,"from","","",34,[[],["knobmode",4]]],[11,"from","","",34,[[],["knobmode",4]]],[11,"from","","",34,[[],["knobmode",4]]],[11,"from","","",35,[[],["key",4]]],[11,"from","","",35,[[],["key",4]]],[11,"from","","",35,[[],["key",4]]],[11,"from","","",35,[[],["key",4]]],[11,"from","","",35,[[],["key",4]]],[11,"from","","",35,[[],["key",4]]],[11,"from","","",35,[[],["key",4]]],[11,"from","","",35,[[],["key",4]]],[11,"from","","",35,[[],["key",4]]],[11,"from","","",35,[[],["key",4]]],[11,"from","vst::event","",39,[[["event",3]],["event",4]]],[11,"from","vst::plugin","",45,[[],["category",4]]],[11,"from","","",45,[[],["category",4]]],[11,"from","","",45,[[],["category",4]]],[11,"from","","",45,[[],["category",4]]],[11,"from","","",45,[[],["category",4]]],[11,"from","","",45,[[],["category",4]]],[11,"from","","",45,[[],["category",4]]],[11,"from","","",45,[[],["category",4]]],[11,"from","","",45,[[],["category",4]]],[11,"from","","",45,[[],["category",4]]],[11,"from","vst::util","",50,[[]]],[11,"into","vst::api","Convert to integer ordinal for interop with VST api.",10,[[]]],[11,"into","vst::channels","Convert to the VST api equivalent of this structure.",32,[[],["channelproperties",3]]],[11,"into","","Convert to VST API arrangement type.",31,[[],["speakerarrangementtype",4]]],[11,"into","vst::editor","",34,[[]]],[11,"into","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into","vst::plugin","",45,[[]]],[11,"into","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into","","",46,[[],["string",3]]],[11,"extend","vst::api","",17,[[["intoiterator",8]]]],[11,"extend","","",18,[[["intoiterator",8]]]],[11,"extend","","",19,[[["intoiterator",8]]]],[11,"extend","","",20,[[["intoiterator",8]]]],[11,"extend","","",21,[[["intoiterator",8]]]],[11,"into_iter","vst::buffer","",24,[[]]],[11,"next","","",52,[[],["option",4]]],[11,"next","","",53,[[],["option",4]]],[11,"next","","",54,[[],["option",4]]],[11,"next","vst::util","",56,[[],["option",4]]],[11,"clone","vst::api","",9,[[],["speakerarrangementtype",4]]],[11,"clone","","",15,[[],["eventtype",4]]],[11,"clone","","",5,[[],["event",3]]],[11,"clone","","",7,[[],["sysexevent",3]]],[11,"clone","","",8,[[],["timeinfo",3]]],[11,"clone","","",16,[[],["smpteframerate",4]]],[11,"clone","","",17,[[],["channelflags",3]]],[11,"clone","","",18,[[],["pluginflags",3]]],[11,"clone","","",19,[[],["modifierkey",3]]],[11,"clone","","",20,[[],["midieventflags",3]]],[11,"clone","","",21,[[],["timeinfoflags",3]]],[11,"clone","vst::buffer","",24,[[],["inputs",3]]],[11,"clone","vst::editor","",33,[[],["keycode",3]]],[11,"clone","","",34,[[],["knobmode",4]]],[11,"clone","","",35,[[],["key",4]]],[11,"clone","vst::event","",39,[[],["event",4]]],[11,"clone","","",37,[[],["midievent",3]]],[11,"clone","","",38,[[],["sysexevent",3]]],[11,"clone","vst::plugin","",45,[[],["category",4]]],[11,"clone","","",44,[[],["info",3]]],[11,"clone","","",49,[[],["hostcallback",3]]],[11,"default","vst::api","",8,[[],["timeinfo",3]]],[11,"default","","",16,[[]]],[11,"default","vst::buffer","",26,[[]]],[11,"default","vst::channels","",31,[[],["speakerarrangementtype",4]]],[11,"default","vst::plugin","",44,[[],["info",3]]],[11,"default","","",49,[[],["hostcallback",3]]],[11,"default","vst::util","",50,[[]]],[11,"default","","",51,[[],["parametertransfer",3]]],[11,"cmp","vst::api","",17,[[["channelflags",3]],["ordering",4]]],[11,"cmp","","",18,[[["pluginflags",3]],["ordering",4]]],[11,"cmp","","",19,[[["modifierkey",3]],["ordering",4]]],[11,"cmp","","",20,[[["midieventflags",3]],["ordering",4]]],[11,"cmp","","",21,[[["timeinfoflags",3]],["ordering",4]]],[11,"eq","","",10,[[["supported",4]]]],[11,"ne","","",10,[[["supported",4]]]],[11,"eq","","",17,[[["channelflags",3]]]],[11,"ne","","",17,[[["channelflags",3]]]],[11,"eq","","",18,[[["pluginflags",3]]]],[11,"ne","","",18,[[["pluginflags",3]]]],[11,"eq","","",19,[[["modifierkey",3]]]],[11,"ne","","",19,[[["modifierkey",3]]]],[11,"eq","","",20,[[["midieventflags",3]]]],[11,"ne","","",20,[[["midieventflags",3]]]],[11,"eq","","",21,[[["timeinfoflags",3]]]],[11,"ne","","",21,[[["timeinfoflags",3]]]],[11,"partial_cmp","","",17,[[["channelflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["channelflags",3]]]],[11,"le","","",17,[[["channelflags",3]]]],[11,"gt","","",17,[[["channelflags",3]]]],[11,"ge","","",17,[[["channelflags",3]]]],[11,"partial_cmp","","",18,[[["pluginflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["pluginflags",3]]]],[11,"le","","",18,[[["pluginflags",3]]]],[11,"gt","","",18,[[["pluginflags",3]]]],[11,"ge","","",18,[[["pluginflags",3]]]],[11,"partial_cmp","","",19,[[["modifierkey",3]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["modifierkey",3]]]],[11,"le","","",19,[[["modifierkey",3]]]],[11,"gt","","",19,[[["modifierkey",3]]]],[11,"ge","","",19,[[["modifierkey",3]]]],[11,"partial_cmp","","",20,[[["midieventflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["midieventflags",3]]]],[11,"le","","",20,[[["midieventflags",3]]]],[11,"gt","","",20,[[["midieventflags",3]]]],[11,"ge","","",20,[[["midieventflags",3]]]],[11,"partial_cmp","","",21,[[["timeinfoflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",21,[[["timeinfoflags",3]]]],[11,"le","","",21,[[["timeinfoflags",3]]]],[11,"gt","","",21,[[["timeinfoflags",3]]]],[11,"ge","","",21,[[["timeinfoflags",3]]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","vst::editor","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","vst::host","",40,[[["formatter",3]],["result",6]]],[11,"fmt","vst::plugin","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","vst::util","",50,[[["formatter",3]],["result",6]]],[11,"fmt","vst::host","",40,[[["formatter",3]],["result",6]]],[11,"fmt","vst::util","",50,[[["formatter",3]],["result",6]]],[11,"sub","vst::api","Returns the set difference of the two sets of flags.",17,[[["channelflags",3]],["channelflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["pluginflags",3]],["pluginflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",19,[[["modifierkey",3]],["modifierkey",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",20,[[["midieventflags",3]],["midieventflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",21,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",17,[[["channelflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["pluginflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",19,[[["modifierkey",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",20,[[["midieventflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",21,[[["timeinfoflags",3]]]],[11,"not","","Returns the complement of this set of flags.",17,[[],["channelflags",3]]],[11,"not","","Returns the complement of this set of flags.",18,[[],["pluginflags",3]]],[11,"not","","Returns the complement of this set of flags.",19,[[],["modifierkey",3]]],[11,"not","","Returns the complement of this set of flags.",20,[[],["midieventflags",3]]],[11,"not","","Returns the complement of this set of flags.",21,[[],["timeinfoflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",17,[[["channelflags",3]],["channelflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",19,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",20,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",21,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",17,[[["channelflags",3]],["channelflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",19,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitor","","Returns the union of the two sets of flags.",20,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",21,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",17,[[["channelflags",3]],["channelflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",18,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",19,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",20,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",21,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",17,[[["channelflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["pluginflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",19,[[["modifierkey",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",20,[[["midieventflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",21,[[["timeinfoflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",17,[[["channelflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["pluginflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",19,[[["modifierkey",3]]]],[11,"bitor_assign","","Adds the set of flags.",20,[[["midieventflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",21,[[["timeinfoflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",17,[[["channelflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["pluginflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",19,[[["modifierkey",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",20,[[["midieventflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",21,[[["timeinfoflags",3]]]],[11,"index","vst::buffer","",24,[[]]],[11,"index","","",25,[[]]],[11,"index_mut","","",25,[[]]],[11,"hash","vst::api","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"from_iter","","",17,[[["intoiterator",8]],["channelflags",3]]],[11,"from_iter","","",18,[[["intoiterator",8]],["pluginflags",3]]],[11,"from_iter","","",19,[[["intoiterator",8]],["modifierkey",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["midieventflags",3]]],[11,"from_iter","","",21,[[["intoiterator",8]],["timeinfoflags",3]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]]],"p":[[3,"AEffect"],[3,"ChannelProperties"],[3,"FileType"],[3,"FileSelect"],[3,"Events"],[3,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[3,"TimeInfo"],[4,"SpeakerArrangementType"],[4,"Supported"],[4,"ProcessLevel"],[4,"HostLanguage"],[4,"FileSelectCommand"],[4,"FileSelectType"],[4,"EventType"],[4,"SmpteFrameRate"],[3,"ChannelFlags"],[3,"PluginFlags"],[3,"ModifierKey"],[3,"MidiEventFlags"],[3,"TimeInfoFlags"],[8,"WriteIntoPlaceholder"],[3,"AudioBuffer"],[3,"Inputs"],[3,"Outputs"],[3,"SendEventBuffer"],[4,"ArrangementTarget"],[4,"StereoChannel"],[4,"StereoConfig"],[4,"SurroundConfig"],[4,"SpeakerArrangementType"],[3,"ChannelInfo"],[3,"KeyCode"],[4,"KnobMode"],[4,"Key"],[8,"Editor"],[3,"MidiEvent"],[3,"SysExEvent"],[4,"Event"],[4,"PluginLoadError"],[8,"Host"],[3,"PluginLoader"],[3,"HostBuffer"],[3,"Info"],[4,"Category"],[4,"CanDo"],[8,"Plugin"],[8,"PluginParameters"],[3,"HostCallback"],[3,"AtomicFloat"],[3,"ParameterTransfer"],[3,"AudioBufferIterator"],[3,"InputIterator"],[3,"OutputIterator"],[3,"PluginInstance"],[3,"ParameterTransferIterator"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);